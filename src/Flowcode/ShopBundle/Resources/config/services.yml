services:

    amulen.shop.form.product:
        class: Flowcode\ShopBundle\Form\ProductType
        arguments: ['@amulen.classification.category']
        tags:
            - { name: form.type, alias: flowcode_shopbundle_product }

    amulen.shop.form.productorder:
        class: Flowcode\ShopBundle\Form\ProductOrderType
        tags:
            - { name: form.type, alias: amulen_shopbundle_productorder }

    amulen.shop.form.productorderstatus:
        class: Flowcode\ShopBundle\Form\ProductOrderStatusType
        tags:
            - { name: form.type, alias: amulen_shopbundle_productorderstatus }


    amulen.shop.form.productorder.shipping:
        class: Flowcode\ShopBundle\Form\ProductOrderShippingType
        tags:
            - { name: form.type, alias: amulen_shopbundle_productorder_shipping }

    amulen.shop.form.strategy:
        class: Flowcode\ShopBundle\Form\StrategyType
        arguments: ['@amulen.classification.category']
        tags:
            - { name: form.type, alias: flowcode_shopbundle_strategy }

    symfony.form.type.tree:
       class: Yavin\Symfony\Form\Type\TreeType
       arguments: [ "@property_accessor" ]
       tags:
           - { name: form.type, alias: y_tree }
    symfony.form.type_guesser.tree:
       class: Yavin\Symfony\Form\Type\TreeTypeGuesser
       arguments: [ "@doctrine" ]
       tags:
           - { name: form.type_guesser }

    amulen.shop.form.product.gallery:
        class: Flowcode\ShopBundle\Form\ProductGalleryItemType
        tags:
            - { name: form.type, alias: flowcode_shopbundle_product_gallery }

    amulen.shop.form.brand:
        class: Flowcode\ShopBundle\Form\BrandType
        tags:
            - { name: form.type, alias: flowcode_shopbundle_brand }

    amulen.shop.form.service:
        class: Flowcode\ShopBundle\Form\ServiceType
        tags:
            - { name: form.type, alias: flowcode_shopbundle_service }

    # Repositories
    amulen.shop.repository.product:
            class: Doctrine\ORM\EntityRepository
            factory_service: doctrine.orm.default_entity_manager
            factory_method: getRepository
            arguments:
                - Amulen\ShopBundle\Entity\Product

    amulen.shop.repository.stock_change_log:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - Flowcode\ShopBundle\Entity\StockChangeLog

    amulen.shop.repository.warehouse_product:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - Flowcode\ShopBundle\Entity\WarehouseProduct

    amulen.shop.repository.stock_transfer:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - Flowcode\ShopBundle\Entity\StockTransfer

    amulen.shop.repository.inventory:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - Flowcode\ShopBundle\Entity\Inventory

    amulen.shop.repository.inventory_item:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.default_entity_manager
        factory_method: getRepository
        arguments:
            - Flowcode\ShopBundle\Entity\InventoryItem



    # Form Filters
    amulen.shop.form.filter.shop:
        class: Flowcode\ShopBundle\Form\FilterShopType
        arguments: ['@amulen.classification.category']
        tags:
            - { name: form.type, alias: flowcode_shopbundle_filtershop }

    amulen.shop.showmenu_eventsubscriber:
        class: Flowcode\ShopBundle\Event\ShowMenuSubscriber
        arguments: ['@router', '@translator']
        tags:
            - { name: kernel.event_subscriber }

    amulen.shop.listplugins_eventsubscriber:
        class: Flowcode\ShopBundle\Event\ListPluginsSubscriber
        arguments: ['@router', '@translator']
        tags:
            - { name: kernel.event_subscriber }

    amulen.shop.repository.order:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - Amulen\ShopBundle\Entity\ProductOrder

    amulen.shop.repository.order_status:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - Amulen\ShopBundle\Entity\ProductOrderStatus

    amulen.shop.repository.order.item:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - Amulen\ShopBundle\Entity\ProductOrderItem

    amulen.shop.repository.setting:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - Amulen\ShopBundle\Entity\ShopSetting

    amulen.shop.product:
        class: Flowcode\ShopBundle\Service\ProductService
        arguments:
          - "@doctrine.orm.entity_manager"
          - "@lexik_form_filter.query_builder_updater"

    amulen.shop.strategy:
        class: Flowcode\ShopBundle\Service\StrategyService
        arguments:
          - "@doctrine.orm.entity_manager"

    amulen.shop.order:
        class: Flowcode\ShopBundle\Service\ProductOrderService
        arguments:
          - "@doctrine.orm.entity_manager"
          - "@amulen.shop.repository.order"
          - "@amulen.shop.repository.order_status"
          - "@event_dispatcher"
          - "@amulen.shop.repository.order.item"
          - "@amulen.shop.service.stock"

    amulen.shop.order.item:
        class: Flowcode\ShopBundle\Service\ProductOrderItemService
        arguments: ["@doctrine.orm.entity_manager", "@amulen.shop.repository.order.item"]


    amulen.shop.settings:
        class: Flowcode\ShopBundle\Service\SettingsService
        arguments: ["@amulen.shop.repository.setting"]
        
    amulen.shop.service.stock_transfer:
        class: Flowcode\ShopBundle\Service\StockTransferService
        arguments:
          - "@amulen.shop.repository.stock_transfer"
          - "@amulen.shop.service.stock"
          
    amulen.shop.service.inventory:
        class: Flowcode\ShopBundle\Service\InventoryService
        arguments:
          - "@amulen.shop.repository.inventory"
          - "@amulen.shop.repository.inventory_item"
          - "@amulen.shop.repository.product"
          - "@amulen.shop.service.warehouse_product"          

    amulen.shop.service.stock_change_log:
        class: Flowcode\ShopBundle\Service\StockChangeLogService
        arguments: ['@amulen.shop.repository.stock_change_log']

    amulen.shop.service.warehouse_product:
        class: Flowcode\ShopBundle\Service\WarehouseProductService
        arguments: ['@amulen.shop.repository.warehouse_product']

    amulen.shop.service.stock:
        class: Flowcode\ShopBundle\Service\StockService
        arguments:
          - "@amulen.shop.service.warehouse_product"
          - "@amulen.shop.service.stock_change_log"
          - "@amulen.shop.repository.product"
        calls:
          - [setContainer, ["@service_container"]]
        